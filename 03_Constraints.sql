-- CONSTRAINTS:
-- CHECK
-- NOT NULL
-- UNIQUE
-- PRIMARY KEY
-- FOREIGN KEY

SELECT * FROM Customers;
DROP TABLE Customers;
-- DROP TABLE Customers CASCADE; -- Used to drop table forcefully

CREATE TABLE Customers
(
	Customer_ID		VARCHAR(20) PRIMARY KEY,
	First_Name		VARCHAR(20) NOT NULL,
	Last_Name		VARCHAR(20),
	Phone_No		BIGINT 		UNIQUE,
	address			VARCHAR(50),
	DOB				DATE, 
	Is_Active		VARCHAR(5) 	CHECK (Is_Active IN ('true', 'false'))
);

-- EVERY TABLE CAN HAVE ONLY 1 PRIMARY KEY. 
-- BUT THAT 1 PRIMARY KEY CAN CONSIST OF MULTIPLE COLUMN -> COMPOSITE PRIMARY KEY.

SELECT * FROM Accounts;
DROP TABLE Accounts;

CREATE TABLE Accounts
(
	Acc_No 			INT,
	Acc_Type 		VARCHAR(20) CHECK (Acc_Type IN ('Loan', 'Saving')),
	Cust_Id 		VARCHAR(20), -- REFERENCES Customers(Customer_ID)
	Balance 		FLOAT,
	CONSTRAINT pk_acc PRIMARY KEY (Acc_No),
	CONSTRAINT fk_acc FOREIGN KEY (Cust_Id) REFERENCES Customers(Customer_ID)
);
ALTER TABLE Accounts ALTER Acc_No TYPE BIGINT;

-- While inserting values in Cust_Id column of the Accounts table, 
-- first values will be check in Customers tables if that Cust_Id is present. If present, then only values will be inserted.

SELECT * FROM Transactions;
DROP TABLE Transactions;

CREATE TABLE Transactions
(
	Trans_Id 		INT,
	Trans_Type 		VARCHAR(20) CHECK (Trans_Type in ('Wire Transfer', 'Card Transaction', 'Net Banking')),
	Trans_Date 		DATE,
	Acc_No 			INT,
	Amount 			FLOAT,
	Status 			VARCHAR(20),
	CONSTRAINT pk_trans PRIMARY KEY (Trans_Id, Trans_Type), -- Composite Primary Key
	CONSTRAINT fk_trans FOREIGN KEY (Acc_No) REFERENCES Accounts(Acc_No)
);
ALTER TABLE Transactions ALTER COLUMN Trans_Id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE Transactions ALTER Acc_No TYPE BIGINT;

SELECT * FROM Products;
DROP TABLE Products;
CREATE TABLE Products
(
	Prod_Id 		INT GENERATED BY DEFAULT AS IDENTITY,
	Prod_Name 		VARCHAR(20) UNIQUE,
	Prod_Desc 		VARCHAR(200)
);

SELECT * FROM Branch;
DROP TABLE Branch;

CREATE TABLE Branch
(
	Branch_Name 	VARCHAR(20),
	Branch_Code 	VARCHAR(20) UNIQUE
);

SELECT * FROM Employees;
DROP TABLE Employees;

CREATE TABLE Employees
(
	Emp_Id 			VARCHAR(20) PRIMARY KEY,
	First_Name 		VARCHAR(20) NOT NULL,
	Last_Name 		VARCHAR(20) NOT NULL,
	Salary 			FLOAT,
	Branch_Code 	VARCHAR(20),
	CONSTRAINT fk_emp FOREIGN KEY (Branch_Code) REFERENCES Branch(Branch_Code)
);

COMMIT;